#include <windows.h>
LONG WINAPI WndProc(HWND,UINT,WPARAM,LPARAM);
int WINAPI WinMain(HINSTANCE hInstance,HINSTANCE hPreInstance,LPSTR lpszCmdLine,int nCmdShow)
{
	WNDCLASS wc;
	HWND hwnd;
	MSG msg;

	wc.style=0;                       //Class style
    wc.lpfnWndProc = (WNDPROC)WndProc; //Window procedure address
	wc.cbClsExtra=0;                  //Class extra bytes
	wc.cbWndExtra=0;                  //Windows extra bytes
	wc.hInstance=hInstance;           //Instance handle
	wc.hIcon=LoadIcon(NULL,IDI_WINLOGO); //Icon handle
	wc.hCursor=LoadCursor(NULL,IDC_ARROW); //Cursor handle
	wc.hbrBackground=(HBRUSH)(COLOR_WINDOW+1); //Background color
	wc.lpszMenuName=NULL;                      //Menu name
	wc.lpszClassName="MyWndClass";             //WNDCLASS name
   
	RegisterClass(&wc);
	hwnd=CreateWindow(
         "MyWndClass",
		 "SDK_Application",
		 WS_OVERLAPPEDWINDOW,
		 CW_USEDEFAULT,
		 CW_USEDEFAULT,
		 CW_USEDEFAULT,
		 CW_USEDEFAULT,
		 HWND_DESKTOP,
		 NULL,
		 hInstance,
		 NULL
		 );

	ShowWindow(hwnd,nCmdShow);
	UpdateWindow(hwnd);
	
	while(GetMessage(&msg,NULL,0,0)){
	      TranslateMessage(&msg);
		  DispatchMessage(&msg);
	}
	return msg.wParam;
}

LRESULT CALLBACK WndProc(HWND hwnd,UINT message,WPARAM wparam,LPARAM lparam){
	PAINTSTRUCT ps;
	HDC hdc;
	switch(message){
	case WM_PAINT:
		hdc=BeginPaint(hwnd,&ps);
		Ellipse(hdc,0,0,200,100);
		EndPaint(hwnd,&ps);
		return 0;

	case WM_DESTROY:
		PostQuitMessage(0);
		return 0;
	}
	return DefWindowProc(hwnd,message,wparam,lparam);
}
